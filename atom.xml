<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jun&#39;Bolg</title>
  
  <subtitle>感谢与你相遇</subtitle>
  <link href="https://junsmile.cc/atom.xml" rel="self"/>
  
  <link href="https://junsmile.cc/"/>
  <updated>2022-02-16T06:45:00.000Z</updated>
  <id>https://junsmile.cc/</id>
  
  <author>
    <name>Jun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Raspberry安装配置汇总</title>
    <link href="https://junsmile.cc/posts/12521/"/>
    <id>https://junsmile.cc/posts/12521/</id>
    <published>2022-02-14T06:45:00.000Z</published>
    <updated>2022-02-16T06:45:00.000Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1468259255&auto=1&height=66"></iframe><p>接触Raspberry已经很久了，一直后悔没有好好整理一下。正好最近开始上班，工作的内容也相近，所以决定好好整理一下。</p><h1 id="一、系统安装"><a href="#一、系统安装" class="headerlink" title="一、系统安装"></a>一、系统安装</h1><p>Raspberry基本可以安装目前所有的主流Linux发行版系统，但是我还是习惯使用官方的‘Raspbian’，这里指路一个树莓派实验室的<a href="https://shumeipai.nxez.com/download#os">资源导航</a>。</p><h2 id="1、无屏幕安装"><a href="#1、无屏幕安装" class="headerlink" title="1、无屏幕安装"></a>1、无屏幕安装</h2><p>树莓派在日常使用过程中经常是没有屏幕可以使用的，有时候安装的也是无屏幕的lite版本。<br>首先下载几个需要使用的工具</p><h3 id="下载工具"><a href="#下载工具" class="headerlink" title="下载工具"></a>下载工具</h3><p>镜像烧录工具<br><a href="https://sourceforge.net/projects/win32diskimager/files/Archive/">Win32DiskImager</a><br>SSH 客户端,然而我日常习惯使用Xshell<br><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">PUTTY</a><br>SD卡格式化工具，可选（可使用win10自带的磁盘管理器格式化）<br><a href="https://www.sdcard.org/">SD Formatter for SD</a></p><p>去树莓派实验室的<a href="https://shumeipai.nxez.com/download#os">资源导航页面</a>下载好需要的系统及其版本，我目前使用了最新的raspbian 64位的lite版本。</p><h3 id="烧录镜像"><a href="#烧录镜像" class="headerlink" title="烧录镜像"></a>烧录镜像</h3><p>准备一个sd卡，如果使用的是树莓派3B+以上的版本为了ROM的读取速度也可以使用性能比较优秀的U盘来作为硬盘。<br>将sd卡用读卡器连接电脑。解压上面下载的文件，打开“Win32DiskImager”，选择“之前下载的镜像文件.img”和“目标磁盘”。（别选错了，会执行格式化）然后点击“write”写入即可，等几分钟镜像就写到sd卡上了。</p><h3 id="开启ssh"><a href="#开启ssh" class="headerlink" title="开启ssh"></a>开启ssh</h3><p>在sd卡生成的boot分区盘中创建一个名字为ssh的文件，注意该文件是没有后缀的。</p><h3 id="配置wifi网络"><a href="#配置wifi网络" class="headerlink" title="配置wifi网络"></a>配置wifi网络</h3><p>我们可以在未开机的情况下修改“/boot/wpa_supplicant.conf”来配置wifi。<br>打开“/boot/”目录。新建一个“wpa_supplicant.conf”文件，注意后缀哦，可以使用记事本打开。</p><p>写入以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">update_config&#x3D;1</span><br><span class="line">ap_scan&#x3D;1</span><br><span class="line">fast_reauth&#x3D;110</span><br><span class="line"></span><br><span class="line">country&#x3D;CN</span><br><span class="line">network&#x3D;&#123;</span><br><span class="line">    ssid&#x3D;&quot;要连接的WiFi1 名字&quot;</span><br><span class="line">    psk&#x3D;&quot;要连接的WiFi1 密码&quot;</span><br><span class="line">    priority&#x3D;5</span><br><span class="line">&#125;</span><br><span class="line">network&#x3D;&#123;</span><br><span class="line">    ssid&#x3D;&quot;要连接的WiFi2 名字&quot;</span><br><span class="line">    psk&#x3D;&quot;要连接的WiFi2 密码&quot;</span><br><span class="line">    priority&#x3D;4 #优先级，数字越大等级越高</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>搞定后将SD卡插入到树莓派中，通电开机。<br>通过路由器的后台就可以查看到树莓派的ip地址了。</p><p>如果没有无线网络环境的情况下可以使用网线直连电脑，连接后在网络共享中心–&gt;更改适配器设置–&gt;WLAN–&gt;属性–&gt;共享选项卡，勾选允许其他用户通过此计算机的internet连接来连接。<br>打开cmd，输入arp -a可看到树莓派的ip地址。</p><h3 id="SSH连接"><a href="#SSH连接" class="headerlink" title="SSH连接"></a>SSH连接</h3><p>废话不多说，直接打开Xsheel，输入ip地址和22端口，使用<code>默认用户名：pi 默认密码：raspberry</code>登录。</p><h2 id="2、有屏幕安装"><a href="#2、有屏幕安装" class="headerlink" title="2、有屏幕安装"></a>2、有屏幕安装</h2><p>这个就很简单，写好系统镜像，插入树莓派通电开机，接上屏幕，开干。</p><h1 id="二、系统初始化"><a href="#二、系统初始化" class="headerlink" title="二、系统初始化"></a>二、系统初始化</h1><h2 id="1、换源"><a href="#1、换源" class="headerlink" title="1、换源"></a>1、换源</h2><p>默认情况下，树莓派软件源服务器位于欧洲，在国内访问是非常慢的，经常只有几k每秒的下载速率，有时候甚至需要通过科学上网才能快速的下载。使用我们直接把源换成国内的源就好了。</p><p>这里我们更换<a href="https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/">清华源</a></p><h3 id="脚本换源"><a href="#脚本换源" class="headerlink" title="脚本换源"></a>脚本换源</h3><p>这里推荐一个换源工具，一键生成更新命令，再也不用手打指令啦–&gt;<a href="https://tech.biko.pub/tool#/rpi-apt-sources">树莓派软件源在线配置工具</a></p><h3 id="手动换源"><a href="#手动换源" class="headerlink" title="手动换源"></a>手动换源</h3><p>执行<code>sudo nano /etc/apt/sources.list</code>进入编辑器<br>编辑这个文件，把原来的内容注释掉（最前面加 # 号），在文件最顶部添加下面的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb [arch&#x3D;armhf] http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;raspbian&#x2F;raspbian&#x2F; bullseye main non-free contrib rpi</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;raspbian&#x2F;raspbian&#x2F; bullseye main non-free contrib rpi</span><br></pre></td></tr></table></figure><p>如果使用的是64位版本还应该在上面这个文件后面添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb [arch&#x3D;arm64] http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;raspbian&#x2F;multiarch&#x2F; bullseye main</span><br></pre></td></tr></table></figure><p>按 ctrl-o 保存，按 ctrl-x 关闭。<br>同样的方法，把<code>/etc/apt/sources.list.d/raspi.list</code>文件也替换成下面的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;raspberrypi&#x2F; buster main ui</span><br></pre></td></tr></table></figure><p>OK更换完毕。执行<code>sudo apt-get update &amp;&amp; sudo apt-get upgrade -y</code>来更新源&amp;更新系统。</p><p>最新的debian11(bullseye)在换源后可能会出现以下报错信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Get:1 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;raspbian&#x2F;raspbian bullseye InRelease [15.0 kB]</span><br><span class="line">Hit:2 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;raspberrypi bullseye InRelease</span><br><span class="line">Err:1 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;raspbian&#x2F;raspbian bullseye InRelease</span><br><span class="line">  The following signatures couldn&#39;t be verified because the public key is not available: NO_PUBKEY 9165938D90FDDD2E</span><br><span class="line">Reading package lists... Done</span><br><span class="line">W: GPG error: http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;raspbian&#x2F;raspbian bullseye InRelease: The following signatures couldn&#39;t be verified because the public key is not available: NO_PUBKEY 9165938D90FDDD2E</span><br><span class="line">E: The repository &#39;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;raspbian&#x2F;raspbian bullseye InRelease&#39; is not signed.</span><br><span class="line">N: Updating from such a repository can&#39;t be done securely, and is therefore disabled by default.</span><br><span class="line">N: See apt-secure(8) manpage for repository creation and user configuration details.</span><br></pre></td></tr></table></figure><p>解决办法：执行以下指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gpg --keyserver  keyserver.ubuntu.com --recv-keys 9165938D90FDDD2E</span><br><span class="line">gpg --export --armor  9165938D90FDDD2E | sudo apt-key add -</span><br></pre></td></tr></table></figure><h2 id="2、更换编辑器"><a href="#2、更换编辑器" class="headerlink" title="2、更换编辑器"></a>2、更换编辑器</h2><p>树莓派默认安装的文本编辑器是“nano”，如果说平时习惯使用vim的话可以更换vim，树莓派也安装了“vim”，但是版本比较特殊，完全不符合一般人的使用逻辑。<br>首先我们要卸载“变异版vim”。<br><code>sudo apt-get remove vim-common</code><br>再重新安装“正常版vim”。<br><code>sudo apt-get install vim</code><br>接下来我们还需要配置代码高亮显示，嘛，必备的。<br>在~目录下面新建”.vimrc”文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pi@raspberrypi ~ $ cd ~</span><br><span class="line">pi@raspberrypi ~ $ vim .vimrc</span><br><span class="line"> </span><br><span class="line">set number  &#x2F;&#x2F;开启代码数字行标</span><br><span class="line">syntax on    &#x2F;&#x2F;代码高亮开启</span><br><span class="line">set tabstop&#x3D;4 &#x2F;&#x2F;tab键4空格</span><br></pre></td></tr></table></figure><p>OK！代码高亮也配置完成。</p><h1 id="三、Vim使用回忆及常用配置"><a href="#三、Vim使用回忆及常用配置" class="headerlink" title="三、Vim使用回忆及常用配置"></a>三、Vim使用回忆及常用配置</h1><p>Vim有三个模式，分别是命令模式（Command mode），输入模式（Insert mode）和底线命令模式（Last line mode）。<br>更加详细的使用方法可以参考<a href="https://www.runoob.com/linux/linux-vim.html">菜鸟教程</a>和<a href="https://vimjc.com/vimrc.html">vimjc</a>。</p><h3 id="1、命令模式"><a href="#1、命令模式" class="headerlink" title="1、命令模式"></a>1、命令模式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">: 切换到底线命令模式，以在最底一行输入命令</span><br><span class="line">i 切换到输入模式，以输入字符</span><br><span class="line">x 删除当前光标所在处的字符</span><br></pre></td></tr></table></figure><p>若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。<br>命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。</p><h3 id="2、输入模式"><a href="#2、输入模式" class="headerlink" title="2、输入模式"></a>2、输入模式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">字符按键以及Shift组合，输入字符</span><br><span class="line">ENTER，回车键，换行</span><br><span class="line">BACK SPACE，退格键，删除光标前一个字符</span><br><span class="line">DEL，删除键，删除光标后一个字符</span><br><span class="line">方向键，在文本中移动光标</span><br><span class="line">HOME&#x2F;END，移动光标到行首&#x2F;行尾</span><br><span class="line">Page Up&#x2F;Page Down，上&#x2F;下翻页</span><br><span class="line">Insert，切换光标为输入&#x2F;替换模式，光标将变成竖线&#x2F;下划线</span><br><span class="line">ESC，退出输入模式，切换到命令模式</span><br></pre></td></tr></table></figure><h3 id="3、底线命令模式"><a href="#3、底线命令模式" class="headerlink" title="3、底线命令模式"></a>3、底线命令模式</h3><p>在命令模式下按下:（英文冒号）就进入了底线命令模式。<br>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。<br>在底线命令模式中，基本的命令有（已经省略了冒号）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">q 退出程序</span><br><span class="line">w 保存文件</span><br></pre></td></tr></table></figure><p>按ESC键可随时退出底线命令模式。</p><h1 id="四、GPIO的使用"><a href="#四、GPIO的使用" class="headerlink" title="四、GPIO的使用"></a>四、GPIO的使用</h1><p>在树莓派中方便的使用GPIO那当然是使用Python了，如果安装的是lite版本的系统自带的Python是没有pip的，先安装pip。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python3-pip</span><br><span class="line">pip --version</span><br></pre></td></tr></table></figure><p>下面介绍一下pip的常用指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">通过pip安装包:</span><br><span class="line">pip install **</span><br><span class="line"></span><br><span class="line">清除pip安装过程缓存:</span><br><span class="line">pip cache purge</span><br><span class="line"></span><br><span class="line">卸载pip包:</span><br><span class="line">pip uninstall **</span><br><span class="line"></span><br><span class="line">更新pip包:</span><br><span class="line">pip install --upgrade **</span><br><span class="line"></span><br><span class="line">检测需要升级的pip包:</span><br><span class="line">pip list --outdate</span><br><span class="line"></span><br><span class="line">查看指定的pip是否已经安装:</span><br><span class="line">pip show --files **</span><br><span class="line"></span><br><span class="line">导入&#x2F;导出pip包环境依赖:</span><br><span class="line">pip freeze &gt; requirements.txt #导出</span><br><span class="line">pip install -r requirements.txt    #导入依赖</span><br><span class="line"></span><br><span class="line">国内pip源:</span><br><span class="line">https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple&#x2F; </span><br><span class="line">https:&#x2F;&#x2F;pypi.mirrors.ustc.edu.cn&#x2F;simple&#x2F; </span><br><span class="line">https:&#x2F;&#x2F;pypi.douban.com&#x2F;simple&#x2F; </span><br><span class="line">https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple&#x2F; </span><br><span class="line">https:&#x2F;&#x2F;pypi.mirrors.ustc.edu.cn&#x2F;simple&#x2F;</span><br><span class="line"></span><br><span class="line">更新pip版本:</span><br><span class="line">python.exe -m pip install --upgrade pip</span><br><span class="line">python -m pip install -U pip</span><br></pre></td></tr></table></figure><p>若要把 pip 源换成国内的，只需要把上面的代码改成下图这样（下图以清华大学源为例）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install markdown -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple</span><br></pre></td></tr></table></figure><p>上述做法是临时改成国内源，如果不想每次用 pip 都加上<code> -i 源链接</code>，那么可以把国内源设为默认，做法是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip config set global.index-url https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple&#x2F;</span><br></pre></td></tr></table></figure><h2 id="1、点亮一个led"><a href="#1、点亮一个led" class="headerlink" title="1、点亮一个led"></a>1、点亮一个led</h2><p>在操作GPIO之前需要弄懂树莓派每个GPIO引脚的定义，在树莓派中使用<code>pinout</code>指令可以查看该开发板的硬件信息和GPIO引脚定义。<br>除此之外，树莓派GPIO接口有BOARD、BCM和wiringPi三种编号方式，三种编码方式的对应关系如图<br><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13532817-51a3a06cda2439e9.png" alt="引脚编码"><br>BOARD:BOARD编号方式是树莓派主板上P1接头上的的引脚号，从左到右，从上到下进行编号，左边为奇数，右边为偶数，支持BOARD编号方式的库主要有RPi.GPIO、WiringPi-Go。<br>BCM:BCM编号侧重于CPU寄存器，是根据Broadcom SOC的GPIO寄存器编号的，支持的库比较多，用的也比较多，是后续章节主要使用的编号方式。为便于使用BCM编号方式，建议采用类似“T型GPIO扩展版”或“GPIO参考卡片”等配件，让引脚功能一目了然。<br>wiringPi:wiringPi编号侧重于实现逻辑，GPIO端口从0开始编号，WiringPi库是支持wiringPi编号方式的最主要GPIO库。<br>B+型树莓派主板的40个引脚提供了17个GPIO专用接口，1个UART总线接口、1个SPI总线接口、1个I2C总线接口、2个5V电源接口、2个3.3V电源接口、8个地接口，使用的时候一定先要清楚选择了那套编号方式，相应的库是否支持。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">提示：</span><br><span class="line">1、通电后不要使用金属物体（如螺丝刀等）接触GPIO接口，或短接GPIO引脚。</span><br><span class="line">2、外接输入输出设备时，要先仔细了解设备的额定功率（含电压和电流），不要直接连接高功耗元件（如直流电机等），或输出电压超3.3V的设备。当使用低功率LED时，最好在LED的正极串联一个限流电阻。</span><br><span class="line">3、GPIO工作在3.3V逻辑电平上，0V表示逻辑0，3.3V则表示逻辑1。调试GPIO程序时，可以使用万用表测试GPIO引脚电压，判断输出是否正确。</span><br><span class="line">4、GPIO接口仅提供数字的输入和输出，当需要用到模拟输入时，可以使用ADC芯片或采用电阻式传感器来实现。</span><br></pre></td></tr></table></figure><p>GPIO引脚的输出电压约为3.3V，高于LED上约1.7V的压降，如果直接串联，会有一个非常大的电流通过LED，这个电流通常大到可以损坏LED，甚至供电设备。因此，需要在LED和电源（GPIO引脚）间串联一个电阻限制电流，从而对LED和为其供电的GPIO引脚提供保护。不同厂家，不同颜色压降略有区别，我们假设所用LED的压降为1.8V，GPIO引脚的电流为3mA，限流电阻大小的计算方法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R &#x3D; ( 3.3V - 1.8V ) &#x2F; 3mA &#x3D; 500Ω</span><br></pre></td></tr></table></figure><h3 id="安装rpi-gpio"><a href="#安装rpi-gpio" class="headerlink" title="安装rpi.gpio"></a>安装rpi.gpio</h3><p>Python操作GPIO需要用到RPi.GPIO库，Raspbian系统默认未安装这个库，所以请先使用XShell远程登录树莓派运行以下命令安装RPi.GPIO库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3-rpi.gpio</span><br></pre></td></tr></table></figure><h3 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h3><p>程序的详细说明见注释，这里我们使用了try: Finally: 结构捕捉异常，确保当我们中断程序时（如使用Ctrl+C或者操作系统提供的方法），GPIO.cleanup()函数能被执行，以清理释放GPIO资源。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO                 <span class="comment"># 引入GPIO模块  </span></span><br><span class="line"><span class="keyword">import</span> time                             <span class="comment"># 引入time模块  </span></span><br><span class="line"></span><br><span class="line">GPIO.setmode(GPIO.BCM)                  <span class="comment"># 使用BCM编号方式  </span></span><br><span class="line"></span><br><span class="line">GPIO.setup(<span class="number">19</span>, GPIO.OUT)                <span class="comment"># 将GPIO19设置为输出模式  </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:                     <span class="comment"># 无限循环  </span></span><br><span class="line">            GPIO.output(<span class="number">19</span>, <span class="literal">True</span>)       <span class="comment"># 将GPIO19设置为高电平，点亮LED  </span></span><br><span class="line">            time.sleep(<span class="number">1</span>)               <span class="comment"># 等待1秒钟  </span></span><br><span class="line">            GPIO.output(<span class="number">19</span>, <span class="literal">False</span>)      <span class="comment"># 将GPIO19设置为低电平，熄灭LED  </span></span><br><span class="line">            time.sleep(<span class="number">1</span>)               <span class="comment"># 等待1秒钟  </span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        GPIO.cleanup()                  <span class="comment"># 清理释放GPIO资源，将GPIO复位 </span></span><br></pre></td></tr></table></figure><h2 id="2、读取DS18B20温度传感器数据"><a href="#2、读取DS18B20温度传感器数据" class="headerlink" title="2、读取DS18B20温度传感器数据"></a>2、读取DS18B20温度传感器数据</h2><p>编辑/boot/config.txt文件。在文件底部添加一行：dtoverlay=w1-gpio</p>]]></content>
    
    
      
      
    <summary type="html">&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=1468</summary>
      
    
    
    
    <category term="技术" scheme="https://junsmile.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Raspberry" scheme="https://junsmile.cc/tags/Raspberry/"/>
    
    <category term="嵌入式" scheme="https://junsmile.cc/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>对《大鱼海棠》中樁的评价</title>
    <link href="https://junsmile.cc/posts/12520/"/>
    <id>https://junsmile.cc/posts/12520/</id>
    <published>2021-05-25T09:00:00.000Z</published>
    <updated>2021-05-25T09:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1468259255&auto=1&height=66"></iframe><h2 id="对《大鱼海棠》电影的评价"><a href="#对《大鱼海棠》电影的评价" class="headerlink" title="对《大鱼海棠》电影的评价"></a>对《大鱼海棠》电影的评价</h2><p><img src= "/img/loading.gif" data-lazy-src="https://pic.imgdb.cn/item/60acc27508f74bc1599b5c0b.jpg" alt="大鱼海棠"><br>首先是电影吧，我觉得还是好看的，以前就断断续续看过两遍了，不过也挺久远了。刚刚又去简单回顾了一下，虽说很多人说这部电影述事很烂，但是画面和想表达的部分情感还是能让我get到的。</p><h2 id="对樁的评价"><a href="#对樁的评价" class="headerlink" title="对樁的评价"></a>对樁的评价</h2><p>对女主椿的话，我绝对算不上过厌，我觉得她的感情是一个普通少女该有的情感，观众从上帝视角看有人说她讨厌，但是代入进去想，她也不知道她所做的事情会带来怎样的结果，而且人类情感本来就是复杂矛盾的。</p><p>她对于人类男孩是恩情还是爱情，刚开始我觉得恩情和爱情对一半一半，就算椿没有被网住安全回去了，初见时被笛声打动的椿应该也不会容易忘记他，后面我觉得爱情肯定是更多一些的。</p><p>女主对湫的感情我觉得很微妙，我不太懂青梅竹马之间是怎样的感觉，我想她对湫应该也是有喜欢的，如果她没有遇见那个人类男孩，也许湫也不会被发哥哥卡吧</p>]]></content>
    
    
      
      
    <summary type="html">&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=1468</summary>
      
    
    
    
    <category term="影评" scheme="https://junsmile.cc/categories/%E5%BD%B1%E8%AF%84/"/>
    
    
    <category term="感想" scheme="https://junsmile.cc/tags/%E6%84%9F%E6%83%B3/"/>
    
    <category term="影评" scheme="https://junsmile.cc/tags/%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>“从零”搭建智能家居方案</title>
    <link href="https://junsmile.cc/posts/63403/"/>
    <id>https://junsmile.cc/posts/63403/</id>
    <published>2020-12-20T06:57:00.000Z</published>
    <updated>2020-12-20T06:57:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="“从零”搭建智能家居方案"><a href="#“从零”搭建智能家居方案" class="headerlink" title="“从零”搭建智能家居方案"></a>“从零”搭建智能家居方案</h1><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><p>硬件上使用了树莓派4B开发板，下面是GPIO引脚定义。不过距离我折腾这个项目已经过去了许久，所涉及的代码啥的我也弄丢了。<br>只能在此为它占个位了。也许等我以后有了自己的房子，我会再次捡起它，到时候在完善吧。<br><img src= "/img/loading.gif" data-lazy-src="https://pic.downk.cc/item/5fe6e8533ffa7d37b34c9926.png" alt="GPIO"></p><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><h2 id="成果分享"><a href="#成果分享" class="headerlink" title="成果分享"></a>成果分享</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;“从零”搭建智能家居方案&quot;&gt;&lt;a href=&quot;#“从零”搭建智能家居方案&quot; class=&quot;headerlink&quot; title=&quot;“从零”搭建智能家居方案&quot;&gt;&lt;/a&gt;“从零”搭建智能家居方案&lt;/h1&gt;&lt;h2 id=&quot;硬件&quot;&gt;&lt;a href=&quot;#硬件&quot; class=&quot;</summary>
      
    
    
    
    <category term="技术" scheme="https://junsmile.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="IT" scheme="https://junsmile.cc/tags/IT/"/>
    
    <category term="BolG" scheme="https://junsmile.cc/tags/BolG/"/>
    
    <category term="智能家居" scheme="https://junsmile.cc/tags/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85/"/>
    
  </entry>
  
  <entry>
    <title>Kindle的食用方法</title>
    <link href="https://junsmile.cc/posts/5508/"/>
    <id>https://junsmile.cc/posts/5508/</id>
    <published>2020-08-23T02:43:00.000Z</published>
    <updated>2020-08-23T02:43:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>#概述<br>今年三月份在拼多多上680左右购买了一台日版kindle paperwhite 4 8G，距离如今也已经有快5个月了，很庆幸还没有沦为泡面盖。在这里也顺便记录一下我食用kindle的一些方法。</p><p>#食用方法<br>kindle在我身边的定位不仅仅是一本电纸书，不然在我这儿早就吃灰了。虽然开始是抱着充实自己让自己多看书的幻想入手的，但是人终极还是敌不过懒惰，于是我就让其发挥起娱乐的作用：</p><ol><li>电纸书</li><li>漫画阅读器</li><li>RSS阅读器</li></ol><p>看上去这些功能好像都是电子阅读器最基本的功能了，有啥特殊的？<br>确实，这些功能单独使用起来都是很麻烦的，但是搭配以下的姿势就方便和强大的多了。</p><h2 id="看漫画"><a href="#看漫画" class="headerlink" title="看漫画"></a>看漫画</h2><p>看漫画最麻烦的就是需要找资源下载，然后连接电脑导入到Kindle中，一想到这么麻烦懒癌发作的我就直接放弃了。 但是搭配<a href="https://volmoe.com/">volmoe</a>这个网站就完全不一样了。在该网站中注册账号并绑定自己的kindle邮箱后就可以通过该网站一键推送漫画到自己的kindle，方便程度堪比kindle自己的图书商城。</p><ol><li>访问<a href="https://volmoe.com/">volmoe</a>网站并注册账号登录。不知为啥，我刚开始就是Lv3的等级，每个月有3G的免费额度，我一般是够用了，不够的话可以捐助开通VIP。<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/23/iUy7fq6jCb3xJwe.png" alt="volmoe001"></li><li>在推送设置中绑定自己的Kindle，完成后还需要到<a href="https://www.amazon.cn/">亚马逊</a>网站中为自己的设备添加信任邮箱，将图中的认可发件人添加进去你的kindle才能收到邮件。<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/23/IFSUHmn8olTsjW2.png" alt="volmoe002"><br>登录亚马逊账号后找到管理我的内容和设备–&gt;然后找到首选项页面，拉到最下面就可以找到添加认可的电子邮件按钮。<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/23/7yzeTBRfsm2drWV.png" alt="volmoe003"></li></ol><p>然后你就可以使用任意设备登录volmoe推送你想看的漫画到你的kindle了。<code>PS：可以使用kindle的浏览器访问该网站继续推送。</code></p><h2 id="RSS阅读器"><a href="#RSS阅读器" class="headerlink" title="RSS阅读器"></a>RSS阅读器</h2><p>免费的kindle的RSS推送网站实在是不赚钱，所以有很多以前很出名的网站都关闭了，比如狗耳朵。免费的目前我用过觉得还不错的是<a href="https://wheremylife.cn/">wheremylife</a>，但是目前需要打卡来增加推送次数，所以我后面就放弃没有再使用了。我现在再使用的是自己通过google云服务搭建的KindleEar服务，kindleEar是一个开源的RSS推送项目。具体的搭建过程由于时间比较久了，忘记了呜呜<del>~</del> 等我下次需要搭建的时候一定在这里加上。我目前搭建在谷歌云上的kindleEar服务只有我一个人在使用，如果有需要又懒的搭建的可以从本博客菜单栏的传送–&gt;RSS推送服务进入，需要账号可以联系博主，因为免费的谷歌云服务每天只给50MB的流量，所以尽量关闭图片的推送。</p><p>同样要在设置中设置你的kindle邮箱，然后在亚马逊网站中为自己的设备添加信任邮箱<a href="mailto:&#x76;&#x69;&#115;&#105;&#98;&#111;&#99;&#x40;&#103;&#97;&#x6d;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;">&#x76;&#x69;&#115;&#105;&#98;&#111;&#99;&#x40;&#103;&#97;&#x6d;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;</a>。<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2020/08/23/NOElDmcbifs7op1.png" alt="kindleEar002"><br>虽然有了RSS推送服务，但是并不是每个网站都提供RSS订阅源的，这也是RSS推送服务鸡肋的原因。不过自从DIYgod大佬建立了开源的RSShub项目后就完美解决了这样的问题，Rsshub可以将任意网站制作成RSS源。·</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#概述&lt;br&gt;今年三月份在拼多多上680左右购买了一台日版kindle paperwhite 4 8G，距离如今也已经有快5个月了，很庆幸还没有沦为泡面盖。在这里也顺便记录一下我食用kindle的一些方法。&lt;/p&gt;
&lt;p&gt;#食用方法&lt;br&gt;kindle在我身边的定位不仅仅是</summary>
      
    
    
    
    <category term="分享" scheme="https://junsmile.cc/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="kindle" scheme="https://junsmile.cc/tags/kindle/"/>
    
    <category term="Web" scheme="https://junsmile.cc/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>为BloG添加douban插件</title>
    <link href="https://junsmile.cc/posts/63401/"/>
    <id>https://junsmile.cc/posts/63401/</id>
    <published>2020-08-20T06:57:00.000Z</published>
    <updated>2020-08-20T06:57:00.000Z</updated>
    
    
    
    
    <category term="技术" scheme="https://junsmile.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="douban" scheme="https://junsmile.cc/tags/douban/"/>
    
    <category term="IT" scheme="https://junsmile.cc/tags/IT/"/>
    
    <category term="BolG" scheme="https://junsmile.cc/tags/BolG/"/>
    
  </entry>
  
  <entry>
    <title>MiniMatx机箱折腾日记</title>
    <link href="https://junsmile.cc/posts/45337/"/>
    <id>https://junsmile.cc/posts/45337/</id>
    <published>2020-08-16T05:45:02.000Z</published>
    <updated>2020-08-16T05:45:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mini-Matx机箱折腾日记"><a href="#Mini-Matx机箱折腾日记" class="headerlink" title="Mini Matx机箱折腾日记"></a>Mini Matx机箱折腾日记</h1><h2 id="配置介绍"><a href="#配置介绍" class="headerlink" title="配置介绍"></a>配置介绍</h2><h3 id="目前配置"><a href="#目前配置" class="headerlink" title="目前配置"></a>目前配置</h3><p>去年花光了我全部的积蓄在宿舍组装了一台主机，配置如下</p><table><thead><tr><th align="center">配件</th><th align="center">型号</th><th align="center">价格</th></tr></thead><tbody><tr><td align="center">CPU</td><td align="center">Ryzen 3700x</td><td align="center">2175</td></tr><tr><td align="center">主板</td><td align="center">MSI B450M Mortar MAX</td><td align="center">599</td></tr><tr><td align="center">显卡</td><td align="center">盈通 RX590 游戏高手</td><td align="center">1199</td></tr><tr><td align="center">内存</td><td align="center">CRUCIAL 8G DDR4 3000MHz x4 (C9BJZ颗粒)</td><td align="center">958</td></tr><tr><td align="center">固态</td><td align="center">海康C2000Pro 1T</td><td align="center">799</td></tr><tr><td align="center">机箱</td><td align="center">迎广303</td><td align="center">394</td></tr><tr><td align="center">电源</td><td align="center">海韵Focus GX750</td><td align="center">647</td></tr><tr><td align="center">风扇</td><td align="center">乔思伯日食风扇x4</td><td align="center">128</td></tr></tbody></table><p>总价竟然高达6899，这… 6899是我真的没有想到的，这也是我第一次详细的算这帐，这些配件是我陆陆续续买的，刚开始的预算只有五千多一点，内存只插了两根，风扇也没上。结果后来各方面都觉得差点啥，最后加到了近七千。我哭了，我终于知道我的钱都去哪了/</p><p>再说一下这套配置，我刚开始是想着偏学习方向的，所以在显卡方面就降低了一些预算，把省下来的预算放到了CPU上,其他的配件都是使用的中高端的产品，电源是十年质保的，用到我换下下一台电脑肯定是没问题的。固态在现在看来是买亏了，现在日常699。其他方面目前来看还没有贬值太多。不过既然都组好了，就好好用就行了，越关注用着越糟心。</p><h3 id="折腾原因"><a href="#折腾原因" class="headerlink" title="折腾原因"></a>折腾原因</h3><p>然后是今天的主题，在将电脑从学校搬回家的过程中，我深深的被迎广303感动到了。辣是真重，整个机箱是使用3.5mm的钢板制成，光机箱净重就有10.88kg，加上里面的个种配件，整套估计有将近40kg重，体积方面也是也是感人501x215x490mm，我最大的行李箱完全塞不下这个大家伙。想到不久之后我又要开学了，我就是一个哆嗦，不行，得想办法把这机箱给换了。</p><h3 id="折腾方案"><a href="#折腾方案" class="headerlink" title="折腾方案"></a>折腾方案</h3><p>在我一番了解下，我只有两个选择，一个是上itx机箱，一个是换matx机箱。ITX机箱非常mini，很多都能塞进背包里带走，但是代价就是需要更换ITX主板和SFX电源，更换这两个配件价格起码得1200+，这对于在家宅了8个月的我来说是一笔巨款，果断放弃。退而求其次，选择matx机箱可能是个不错的选择，其实在matx和itx中间还有一种机箱，比itx机箱大一点点，比matx小一点点，可以使用matx主板但是电源还是需要使用sfx电源，这样可以将预算压低到600+（不含机箱），但这对我来说还是有点不能接受。最终我找到了一款非常mini的matx机箱，可能是目前市场上最小的可以满足我的审美的matx机箱了，价格299，比大部分itx机箱要便宜。我是搭配了as120mini一起买的，活动价格199，但是as120mini需要199就比较贵了，两者平均一下还行。</p><p>同时这种小机箱都有一些共同的问题，因为没有背板和机箱空间有限，所以走线难度会比较大，散热也十分捉急。作为一名电气专业的<code>带专生</code>，走线在我<del>强大的动手能力</del>和<del>专业知识</del>面前还不是小问题，散热不行辣就使劲塞风扇就完事了。</p><p>这种机箱一般大家都会去淘宝买定制线去走线，但是一套质量可以的定制往往需要300元以上，这我能忍？买材料自己做才是王道。于是我去淘宝找了一些符合我要求的材料。质量方面肯定是能干翻大部分淘宝货，</p><p>###机箱简介</p><p>机箱尺寸：<code>345x158x264mm</code> 容积：<code>14.6L</code> 可以支持标准的Matx主板+atx电源</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Mini-Matx机箱折腾日记&quot;&gt;&lt;a href=&quot;#Mini-Matx机箱折腾日记&quot; class=&quot;headerlink&quot; title=&quot;Mini Matx机箱折腾日记&quot;&gt;&lt;/a&gt;Mini Matx机箱折腾日记&lt;/h1&gt;&lt;h2 id=&quot;配置介绍&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="技术" scheme="https://junsmile.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="硬件" scheme="https://junsmile.cc/tags/%E7%A1%AC%E4%BB%B6/"/>
    
    <category term="DIY" scheme="https://junsmile.cc/tags/DIY/"/>
    
  </entry>
  
  <entry>
    <title>Markdown学习笔记</title>
    <link href="https://junsmile.cc/posts/14358/"/>
    <id>https://junsmile.cc/posts/14358/</id>
    <published>2020-08-14T18:05:02.000Z</published>
    <updated>2020-08-14T18:05:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown学习笔记"><a href="#Markdown学习笔记" class="headerlink" title="Markdown学习笔记"></a>Markdown学习笔记</h1><p>使用的编辑器为VScode<br>常用的快捷键如下：<br>| 名称   | 快捷键                     |<br>| :————-: | :——————————: |<br>| 按列选中 | Shift+Alt |</p><h2 id="标题语法"><a href="#标题语法" class="headerlink" title="标题语法"></a>标题语法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//标题语法</span></span><br><span class="line"># 一级标题C</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><hr><h2 id="代码引用"><a href="#代码引用" class="headerlink" title="代码引用"></a>代码引用</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码引用</span></span><br><span class="line">/段落引用  ```C     *使用<span class="number">3</span>个飘号+代码类型开始</span><br><span class="line">/         code</span><br><span class="line">/段落引用  ```      *<span class="number">3</span>个飘号结束</span><br><span class="line">/行内代码  `code`</span><br></pre></td></tr></table></figure><p>示例：执行命令<code>npm install</code>等待完成</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C语言案例</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;Enter a value :&quot;</span>);</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%s %d&quot;</span>, str, &amp;i);</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">&quot;\nYou entered: %s %d &quot;</span>, str, i);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">加粗      ** *        Ctrl+B</span><br><span class="line">高亮      == ==     </span><br><span class="line">删除线    ~~ ~~       Alt+S       /  &lt;s&gt;删除线（开启识别HTML标签时）&lt;/s&gt;</span><br><span class="line">斜体      *   *       Ctrl+I</span><br><span class="line">粗斜体    ***  ***</span><br><span class="line">空格      &amp;ensp;</span><br><span class="line">上标      O&lt;sup&gt;2&lt;/sup&gt;</span><br><span class="line">下标      X&lt;sub&gt;2&lt;/sub&gt;</span><br></pre></td></tr></table></figure><p>示例： &ensp;&ensp;&ensp; <strong>加粗</strong> &ensp;&ensp;&ensp;&ensp; ==高亮== &ensp;&ensp;&ensp;&ensp; <del>删除线</del> &ensp;&ensp;&ensp;&ensp; <em>斜体</em> &ensp;&ensp;&ensp;&ensp; <strong><em>粗斜体</em></strong> &ensp;&ensp;&ensp;&ensp; O<sup>2</sup> &ensp;&ensp;&ensp;&ensp; X<sub>2</sub></p><hr><h2 id="引用文本"><a href="#引用文本" class="headerlink" title="引用文本"></a>引用文本</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;       一级引用</span><br><span class="line">&gt;&gt;      二级引用...</span><br><span class="line">&gt; 混合引用:如果想要插入空白换行`即&lt;br /&gt;标签`，在插入处先键入两个以上的空格然后回车即可，[普通链接](https:<span class="comment">//www.mdeditor.com/)</span></span><br></pre></td></tr></table></figure><blockquote><p>引用1<br>引用2</p><blockquote><p>引用1-2</p></blockquote></blockquote><blockquote><p>混合引用:如果想要插入空白换行<code>即&lt;br /&gt;标签</code>，在插入处先键入两个以上的空格然后回车即可，<a href="https://www.mdeditor.com/">普通链接</a></p></blockquote><hr><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分割线1     ---</span></span><br><span class="line"><span class="comment">//分割线2     ***</span></span><br></pre></td></tr></table></figure><hr><h2 id="锚点和连接"><a href="#锚点和连接" class="headerlink" title="锚点和连接"></a>锚点和连接</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[普通链接](https:<span class="comment">//junsmile.cc/)</span></span><br><span class="line">[普通链接带标题](https:<span class="comment">//junsmile.cc/ &quot;普通链接带标题&quot;)</span></span><br><span class="line">直接链接：&lt;https:<span class="comment">//junsmile.cc&gt;</span></span><br><span class="line">[锚点链接][anchor-id]</span><br></pre></td></tr></table></figure><p>示例: <a href="https://junsmile.cc/">普通链接</a> &ensp;&ensp; <a href="https://junsmile.cc/" title="普通链接带标题">普通链接带标题</a> &ensp;&ensp; 直接链接:<a href="https://junsmile.cc/">https://junsmile.cc</a> &ensp;&ensp; [锚点链接][anchor-id]</p><hr><h2 id="图片插入"><a href="#图片插入" class="headerlink" title="图片插入"></a>图片插入</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在线OR本地图片引用</span></span><br><span class="line">![图片名](/image/<span class="number">2333.</span>jpg)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>示例：<br><img src= "/img/loading.gif" data-lazy-src="https://pandao.github.io/editor.md/images/logos/editormd-logo-180x180.png" alt="Markdown"></p><hr><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[我的BolG](https:<span class="comment">//junsmile.cc)</span></span><br></pre></td></tr></table></figure><p>实例：访问我的 <a href="https://junsmile.cc/">BolG</a></p><hr><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在安装有Markdown All in one插件下TAB键可以直接缩进</span></span><br><span class="line">无序列表     - ltem1</span><br><span class="line">有序列表     <span class="number">1.</span> ltem1  </span><br><span class="line">任务标记     - [x] 任务<span class="number">1</span></span><br><span class="line">                - [ ] 任务<span class="number">1</span><span class="number">-1</span></span><br><span class="line">            - [ ] 任务<span class="number">2</span></span><br><span class="line">                - [ ] 任务<span class="number">2</span><span class="number">-1</span></span><br></pre></td></tr></table></figure><p>实例：</p><ul><li>ltem1<ul><li>ltem2</li></ul></li><li>ltem3</li></ul><ol><li>ltem1</li><li>ltem2<ol><li>ltem2-1</li><li>ltem2-2</li></ol></li></ol><ul><li><input checked="" disabled="" type="checkbox"> 任务1<ul><li><input checked="" disabled="" type="checkbox"> 任务1-1</li></ul></li><li><input disabled="" type="checkbox"> 任务2<ul><li><input disabled="" type="checkbox"> 任务2-1</li></ul></li></ul><hr><h2 id="表格绘制"><a href="#表格绘制" class="headerlink" title="表格绘制"></a>表格绘制</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">格式一:</span><br><span class="line">列<span class="number">1</span>   | 列<span class="number">2</span> | 列<span class="number">3</span> </span><br><span class="line">----- | ---: | ---- </span><br><span class="line">第<span class="number">1</span>行 | <span class="number">12</span>  | <span class="number">13</span>  </span><br><span class="line">第<span class="number">2</span>行 | <span class="number">22</span>  | <span class="number">23</span>  </span><br><span class="line">第<span class="number">3</span>行 | <span class="number">32</span>  | <span class="number">33</span> </span><br><span class="line"></span><br><span class="line">格式二:</span><br><span class="line">| Function name   | Description                     |</span><br><span class="line">| :-------------: | ------------------------------: |</span><br><span class="line">| `help()`        | Display the help window.        |</span><br><span class="line">| `destroy()`     | **Destroy your computer!**      |</span><br></pre></td></tr></table></figure><p>示例：</p><table><thead><tr><th>列1</th><th align="right">列2</th><th>列3</th></tr></thead><tbody><tr><td>第1行</td><td align="right">12</td><td>13</td></tr><tr><td>第2行</td><td align="right">22</td><td>23</td></tr><tr><td>第3行</td><td align="right">32</td><td>33</td></tr></tbody></table><table><thead><tr><th align="center">Function name</th><th align="right">Description</th></tr></thead><tbody><tr><td align="center"><code>help()</code></td><td align="right">Display the help window.</td></tr><tr><td align="center"><code>destroy()</code></td><td align="right"><strong>Destroy your computer!</strong></td></tr></tbody></table><hr><h2 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&amp;copy; &amp;  &amp;uml; &amp;trade; &amp;iexcl; &amp;pound;</span><br><span class="line"></span><br><span class="line">&amp;amp; &amp;lt; &amp;gt; &amp;yen; &amp;euro; &amp;reg; &amp;plusmn; &amp;para; &amp;sect; &amp;brvbar; &amp;macr; &amp;laquo; &amp;middot;</span><br><span class="line"></span><br><span class="line">X&amp;sup2; Y&amp;sup3; &amp;frac34; &amp;frac14;  &amp;times;  &amp;divide;   &amp;raquo;</span><br><span class="line"></span><br><span class="line"><span class="number">18</span>&amp;ordm;C  &amp;quot;  &amp;apos;</span><br></pre></td></tr></table></figure><p>示例：<br>&copy; &amp;  &uml; &trade; &iexcl; &pound;</p><p>&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot;</p><p>X&sup2; Y&sup3; &frac34; &frac14;  &times;  &divide;   &raquo;</p><p>18&ordm;C  &quot;  &apos;</p><hr><h2 id="科学公式"><a href="#科学公式" class="headerlink" title="科学公式"></a>科学公式</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$E=mc^<span class="number">2</span>$$</span><br></pre></td></tr></table></figure><p>示例：$$E=mc^2$$</p><hr><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><p>首先需要为博客添加支持<br><code>npm install --save hexo-filter-flowchart</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/     ```flow</span><br><span class="line">/     st=&gt;start: 用户登陆</span><br><span class="line">/     op=&gt;operation: 登陆操作</span><br><span class="line">/     cond=&gt;condition: 登陆成功 Yes <span class="keyword">or</span> No?</span><br><span class="line">/     e=&gt;end: 进入后台</span><br><span class="line"></span><br><span class="line">/     st-&gt;op-&gt;cond</span><br><span class="line">/     cond(yes)-&gt;e</span><br><span class="line">/     cond(no)-&gt;op</span><br><span class="line">/     ```</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st&#x3D;&gt;start: 用户登陆</span><br><span class="line">op&#x3D;&gt;operation: 登陆操作</span><br><span class="line">cond&#x3D;&gt;condition: 登陆成功 Yes or No?</span><br><span class="line">e&#x3D;&gt;end: 进入后台</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Markdown学习笔记&quot;&gt;&lt;a href=&quot;#Markdown学习笔记&quot; class=&quot;headerlink&quot; title=&quot;Markdown学习笔记&quot;&gt;&lt;/a&gt;Markdown学习笔记&lt;/h1&gt;&lt;p&gt;使用的编辑器为VScode&lt;br&gt;常用的快捷键如下：&lt;br&gt;</summary>
      
    
    
    
    <category term="技术" scheme="https://junsmile.cc/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Markdown" scheme="https://junsmile.cc/tags/Markdown/"/>
    
    <category term="写作" scheme="https://junsmile.cc/tags/%E5%86%99%E4%BD%9C/"/>
    
    <category term="工具" scheme="https://junsmile.cc/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>平安夜碎碎念</title>
    <link href="https://junsmile.cc/posts/28649/"/>
    <id>https://junsmile.cc/posts/28649/</id>
    <published>2019-12-24T15:18:01.000Z</published>
    <updated>2019-12-24T15:18:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>当时准备写点什么，可能是因为懒放弃了，现在已经忘记要写啥了，emmm</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;当时准备写点什么，可能是因为懒放弃了，现在已经忘记要写啥了，emmm&lt;/p&gt;
</summary>
      
    
    
    
    <category term="碎碎念" scheme="https://junsmile.cc/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
    <category term="感想" scheme="https://junsmile.cc/tags/%E6%84%9F%E6%83%B3/"/>
    
    <category term="废话" scheme="https://junsmile.cc/tags/%E5%BA%9F%E8%AF%9D/"/>
    
  </entry>
  
  <entry>
    <title>Jun&#39;BolG它又双叒重构了</title>
    <link href="https://junsmile.cc/posts/20240/"/>
    <id>https://junsmile.cc/posts/20240/</id>
    <published>2019-12-22T14:16:01.000Z</published>
    <updated>2019-12-22T14:16:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>#梦开始的地方<br>第一次接触blog，应该是我高三的时候，从小在农村长大，接触电脑的机会比较少，小时候亲戚给了我一些互联网和电脑方面的杂志，所以经常看这这些杂志就想着我要是有一台电脑多好，这也导致我对电脑技术本身的兴趣高于电脑游戏。高三的时候刚好有机会能接触到电脑，学习辣鸡的我就时常偷摸着折腾电脑。然后就开始回想起在些现在看来<del>古董</del>般的杂志上的内容，第一次有了搭建bolg的想法。</p><p>#折腾经历<br>作为一个不会代码的咸鱼，自己写是不可能的了，不过我解到了wordpress，第一次搭建博客是从淘宝上买是主机空间，然后在万网上买了个好像是top的域名，几块钱来着。花了一些时间照着找来的教程磕磕碰碰也算是成功搭建了。然后就是找各种主题，折腾了好一阵子，才配置了一个满意的，不过后来并没有写bolg，只是一时兴起。</p><p>上大学后把以前的bolg删了，自己买了VPS开始搭建，用的还是wordpress，一段时间后又删了，开始尝试各种不同的博客系统，可能只是喜欢折腾的过程吧。随着新鲜劲过了，发现还是让别人了来管理服务器比较好，所以选择了hexo博客系统。以前写的一些垃圾博文也没啥用，也就不搬了吧，就这样吧。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#梦开始的地方&lt;br&gt;第一次接触blog，应该是我高三的时候，从小在农村长大，接触电脑的机会比较少，小时候亲戚给了我一些互联网和电脑方面的杂志，所以经常看这这些杂志就想着我要是有一台电脑多好，这也导致我对电脑技术本身的兴趣高于电脑游戏。高三的时候刚好有机会能接触到电脑，学习</summary>
      
    
    
    
    <category term="碎碎念" scheme="https://junsmile.cc/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
    <category term="感想" scheme="https://junsmile.cc/tags/%E6%84%9F%E6%83%B3/"/>
    
    <category term="废话" scheme="https://junsmile.cc/tags/%E5%BA%9F%E8%AF%9D/"/>
    
  </entry>
  
</feed>
